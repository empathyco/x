@import '../../mixins';

.x-tag {
  // layout
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  box-sizing: border-box;

  // border
  border-style: solid;
  border-block-start-width: var(--x-size-border-width-top-tag-default);
  border-block-end-width: var(--x-size-border-width-bottom-tag-default);
  border-inline-start-width: var(--x-size-border-width-left-tag-default);
  border-inline-end-width: var(--x-size-border-width-right-tag-default);
  border-radius: var(--x-size-border-radius-top-left-tag-default)
    var(--x-size-border-radius-top-right-tag-default)
    var(--x-size-border-radius-bottom-right-tag-default)
    var(--x-size-border-radius-bottom-left-tag-default);

  // color
  background-color: var(--x-color-background-tag-default);
  border-color: var(--x-color-border-tag-default);
  color: var(--x-color-text-tag-default);

  // typography
  line-height: var(--x-size-line-height-tag-default);
  font-family: var(--x-font-family-tag-default);
  font-size: var(--x-size-font-tag-default);
  font-weight: var(--x-number-font-weight-tag-default);

  // size
  gap: var(--x-size-gap-tag-default);
  @include safari-gap(var(--x-size-gap-tag-default));
  min-height: var(--x-size-height-tag-default);
  padding-inline-start: var(--x-size-padding-left-tag-default);
  padding-inline-end: var(--x-size-padding-right-tag-default);
  min-width: calc(3 * var(--x-size-line-height-tag-default));

  // other
  cursor: pointer;

  &.x-filter {
    // color
    --x-color-background-filter-default: transparent;
    --x-size-border-width-filter-default: 0;
    --x-color-text-filter-default: var(--x-color-text-tag-default);

    // size
    --x-size-padding-top-filter-default: 0;
    --x-size-padding-right-filter-default: var(--x-size-padding-right-tag-default);
    --x-size-padding-bottom-filter-default: 0;
    --x-size-padding-left-filter-default: var(--x-size-padding-left-tag-default);
    --x-size-gap-filter-default: var(--x-size-gap-tag-default);

    // typography
    --x-font-family-filter-default: var(--x-font-family-tag-default);
    --x-size-font-filter-default: var(--x-size-font-tag-default);
    --x-number-font-weight-filter-count-default: var(--x-number-font-weight-tag-default);
    --x-size-line-height-filter-default: var(--x-size-line-height-tag-default);
  }

  // selected (the double .x-tag is to override specificity of the scoped component style)
  &.x-tag.x-tag--is-selected {
    // color
    background-color: var(--x-color-background-tag-default-selected);
    border-color: var(--x-color-border-tag-default-selected);
    color: var(--x-color-text-tag-default-selected);

    // typography
    line-height: var(--x-size-line-height-tag-default-selected);
    font-family: var(--x-font-family-tag-default-selected);
    font-size: var(--x-size-font-tag-default-selected);
    font-weight: var(--x-number-font-weight-tag-default-selected);

    &.x-filter {
      // color
      --x-color-text-filter-default-selected: var(--x-color-text-tag-default-selected);

      // typography
      --x-font-family-filter-default-selected: var(--x-font-family-tag-default-selected);
      --x-size-font-filter-default-selected: var(--x-size-font-tag-default-selected);
      --x-number-font-weight-filter-count-default-selected: var(
        --x-number-font-weight-tag-default-selected
      );
      --x-size-line-height-filter-default-selected: var(--x-size-line-height-tag-default-selected);
    }
  }
}
